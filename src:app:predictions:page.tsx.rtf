{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ```\
'use client';\
\
import React, \{ useEffect, useState \} from 'react';\
import \{ useSearchParams \} from 'next/navigation';\
import Link from 'next/link';\
\
interface Prediction \{\
  game_id: string;\
  sport: string;\
  home_team: string;\
  away_team: string;\
  commence_time: string;\
  ml_pick: string;\
  ml_odds: number;\
  ml_confidence: number;\
  spread_pick: string;\
  spread_odds: number;\
  spread_confidence: number;\
  total_pick: string;\
  total_odds: number;\
  total_confidence: number;\
  overall_confidence: number;\
  home_bet_percentage?: number;\
  away_bet_percentage?: number;\
  home_money_percentage?: number;\
  away_money_percentage?: number;\
\}\
\
export default function Predictions() \{\
  const [predictions, setPredictions] = useState<Prediction[]>([]);\
  const [loading, setLoading] = useState(true);\
  const [error, setError] = useState<string | null>(null);\
  const searchParams = useSearchParams();\
  const sport = searchParams.get('sport');\
  \
  useEffect(() => \{\
    async function fetchPredictions() \{\
      try \{\
        setLoading(true);\
        const response = await fetch('/api/predictions');\
        if (!response.ok) \{\
          throw new Error('Failed to fetch predictions');\
        \}\
        const data = await response.json();\
        \
        // Filter by sport if specified\
        const filteredData = sport \
          ? data.filter((pred: Prediction) => pred.sport === sport)\
          : data;\
          \
        setPredictions(filteredData);\
      \} catch (err) \{\
        setError('Error loading predictions. Please try again later.');\
        console.error(err);\
      \} finally \{\
        setLoading(false);\
      \}\
    \}\
    \
    fetchPredictions();\
  \}, [sport]);\
  \
  // Format date from ISO string\
  const formatDate = (dateString: string) => \{\
    const date = new Date(dateString);\
    return date.toLocaleString();\
  \};\
  \
  // Get sport display name\
  const getSportDisplay = (sportKey: string) => \{\
    const sportMap: \{[key: string]: string\} = \{\
      'baseball_mlb': 'MLB',\
      'basketball_nba': 'NBA',\
      'icehockey_nhl': 'NHL'\
    \};\
    return sportMap[sportKey] || sportKey;\
  \};\
  \
  // Get confidence class based on rating\
  const getConfidenceClass = (rating: number) => \{\
    if (rating >= 4) return 'bg-green-100 text-green-800 border-green-300';\
    if (rating >= 2.5) return 'bg-yellow-100 text-yellow-800 border-yellow-300';\
    return 'bg-red-100 text-red-800 border-red-300';\
  \};\
  \
  return (\
    <div className="min-h-screen bg-gray-100">\
      <header className="bg-blue-600 text-white p-6 shadow-md">\
        <div className="container mx-auto">\
          <h1 className="text-3xl font-bold">Sports Betting Predictions</h1>\
          <p className="mt-2">\
            \{sport ? `$\{getSportDisplay(sport)\} Predictions` : 'Top Predictions Across All Sports'\}\
          </p>\
        </div>\
      </header>\
      \
      <main className="container mx-auto py-8 px-4">\
        <div className="mb-6 flex items-center justify-between">\
          <Link \
            href="/"\
            className="text-blue-600 hover:text-blue-800 font-medium flex items-center"\
          >\
            <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">\
              <path fillRule="evenodd" d="M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z" clipRule="evenodd" />\
            </svg>\
            Back to Home\
          </Link>\
          \
          <div className="flex space-x-2">\
            <Link \
              href="/predictions"\
              className=\{`px-3 py-1 rounded-md $\{!sport ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\}`\}\
            >\
              All\
            </Link>\
            <Link \
              href="/predictions?sport=baseball_mlb"\
              className=\{`px-3 py-1 rounded-md $\{sport === 'baseball_mlb' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\}`\}\
            >\
              MLB\
            </Link>\
            <Link \
              href="/predictions?sport=basketball_nba"\
              className=\{`px-3 py-1 rounded-md $\{sport === 'basketball_nba' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\}`\}\
            >\
              NBA\
            </Link>\
            <Link \
              href="/predictions?sport=icehockey_nhl"\
              className=\{`px-3 py-1 rounded-md $\{sport === 'icehockey_nhl' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\}`\}\
            >\
              NHL\
            </Link>\
          </div>\
        </div>\
        \
        \{loading ? (\
          <div className="flex justify-center items-center h-64">\
            <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-600"></div>\
          </div>\
        )  : error ? (\
          <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">\
            <strong className="font-bold">Error!</strong>\
            <span className="block sm:inline"> \{error\}</span>\
          </div>\
        ) : predictions.length === 0 ? (\
          <div className="bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded relative" role="alert">\
            <strong className="font-bold">No predictions available.</strong>\
            <span className="block sm:inline"> Check back later for updated predictions.</span>\
          </div>\
        ) : (\
          <div className="space-y-8">\
            \{predictions.map((prediction, index) => (\
              <div key=\{prediction.game_id || index\} className="bg-white rounded-lg shadow-md overflow-hidden">\
                <div className="bg-gray-800 text-white p-4 flex justify-between items-center">\
                  <div>\
                    <span className="inline-block bg-blue-500 text-white text-xs px-2 py-1 rounded mr-2">\
                      \{getSportDisplay(prediction.sport)\}\
                    </span>\
                    <span className="text-sm text-gray-300">\
                      \{formatDate(prediction.commence_time)\}\
                    </span>\
                  </div>\
                  <div className="flex items-center">\
                    <span className="mr-2 text-sm">Overall Confidence:</span>\
                    <span className=\{`inline-block px-3 py-1 rounded-full text-sm font-semibold border $\{getConfidenceClass(prediction.overall_confidence)\}`\}>\
                      \{prediction.overall_confidence.toFixed(1)\}/5.0\
                    </span>\
                  </div>\
                </div>\
                \
                <div className="p-6">\
                  <div className="text-xl font-bold text-center mb-4">\
                    \{prediction.away_team\} @ \{prediction.home_team\}\
                  </div>\
                  \
                  <div className="grid md:grid-cols-3 gap-4 mb-6">\
                    \{prediction.ml_confidence > 0 && (\
                      <div className="border rounded-lg p-4">\
                        <h3 className="font-semibold text-gray-700 mb-2">Moneyline</h3>\
                        <div className="text-lg font-bold mb-1">\{prediction.ml_pick\}</div>\
                        <div className="text-sm text-gray-600 mb-2">Odds: \{prediction.ml_odds\}</div>\
                        <div className=\{`inline-block px-3 py-1 rounded-full text-sm font-semibold border $\{getConfidenceClass(prediction.ml_confidence)\}`\}>\
                          Confidence: \{prediction.ml_confidence.toFixed(1)\}/5.0\
                        </div>\
                      </div>\
                    )\}\
                    \
                    \{prediction.spread_confidence > 0 && (\
                      <div className="border rounded-lg p-4">\
                        <h3 className="font-semibold text-gray-700 mb-2">Spread</h3>\
                        <div className="text-lg font-bold mb-1">\{prediction.spread_pick\}</div>\
                        <div className="text-sm text-gray-600 mb-2">Odds: \{prediction.spread_odds\}</div>\
                        <div className=\{`inline-block px-3 py-1 rounded-full text-sm font-semibold border $\{getConfidenceClass(prediction.spread_confidence)\}`\}>\
                          Confidence: \{prediction.spread_confidence.toFixed(1)\}/5.0\
                        </div>\
                      </div>\
                    )\}\
                    \
                    \{prediction.total_confidence > 0 && (\
                      <div className="border rounded-lg p-4">\
                        <h3 className="font-semibold text-gray-700 mb-2">Total</h3>\
                        <div className="text-lg font-bold mb-1">\{prediction.total_pick\}</div>\
                        <div className="text-sm text-gray-600 mb-2">Odds: \{prediction.total_odds\}</div>\
                        <div className=\{`inline-block px-3 py-1 rounded-full text-sm font-semibold border $\{getConfidenceClass(prediction.total_confidence)\}`\}>\
                          Confidence: \{prediction.total_confidence.toFixed(1)\}/5.0\
                        </div>\
                      </div>\
                    )\}\
                  </div>\
                  \
                  \{(prediction.home_bet_percentage || prediction.away_bet_percentage) && (\
                    <div className="bg-gray-50 p-4 rounded-lg">\
                      <h3 className="font-semibold text-gray-700 mb-2">Betting Trends</h3>\
                      <div className="grid grid-cols-2 gap-4">\
                        <div>\
                          <h4 className="text-sm font-medium text-gray-600">Ticket Percentages</h4>\
                          <div className="flex justify-between mt-1">\
                            <span>\{prediction.away_team\}: \{prediction.away_bet_percentage\}%</span>\
                            <span>\{prediction.home_team\}: \{prediction.home_bet_percentage\}%</span>\
                          </div>\
                          <div className="w-full bg-gray-200 rounded-full h-2.5 mt-1">\
                            <div \
                              className="bg-blue-600 h-2.5 rounded-full" \
                              style=\{\{ width: `$\{prediction.away_bet_percentage\}%` \}\}\
                            ></div>\
                          </div>\
                        </div>\
                        \
                        <div>\
                          <h4 className="text-sm font-medium text-gray-600">Money Percentages</h4>\
                          <div className="flex justify-between mt-1">\
                            <span>\{prediction.away_team\}: \{prediction.away_money_percentage\}%</span>\
                            <span>\{prediction.home_team\}: \{prediction.home_money_percentage\}%</span>\
                          </div>\
                          <div className="w-full bg-gray-200 rounded-full h-2.5 mt-1">\
                            <div \
                              className="bg-green-600 h-2.5 rounded-full" \
                              style=\{\{ width: `$\{prediction.away_money_percentage\}%` \}\}\
                            ></div>\
                          </div>\
                        </div>\
                      </div>\
                    </div>\
                  )\}\
                </div>\
              </div>\
            ))\}\
          </div>\
        )\}\
      </main>\
      \
      <footer className="bg-gray-800 text-white p-6 mt-8">\
        <div className="container mx-auto">\
          <p className="text-center">\
            &copy; \{new Date().getFullYear()\} Sports Betting Predictions | Using data from The Odds API\
          </p>\
          <p className="text-center text-gray-400 text-sm mt-2">\
            Disclaimer: This application is for informational purposes only. Always gamble responsibly.\
          </p>\
        </div>\
      </footer>\
    </div>\
  );\
\}\
```}